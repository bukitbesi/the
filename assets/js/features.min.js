// Features JavaScript - Enhanced Functionality
(function() {
  'use strict';

  // Utility functions
  const utils = {
    throttle(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    },
    
    debounce(func, wait) {
      let timeout;
      return function executedFunction(...args) {
        const later = () => {
          clearTimeout(timeout);
          func(...args);
        };
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
      };
    },
    
    slugify(text) {
      return text.toString().toLowerCase()
        .replace(/\s+/g, '-')
        .replace(/[^\w\-]+/g, '')
        .replace(/\-\-+/g, '-')
        .replace(/^-+/, '')
        .replace(/-+$/, '');
    }
  };

  // Table of Contents Generator
  function generateTOC() {
    const tocContainer = document.getElementById('toc');
    const postBody = document.querySelector('.post-body.entry-content');
    
    if (!tocContainer || !postBody) return;
    
    const headings = postBody.querySelectorAll('h2, h3, h4');
    
    if (headings.length < 2) {
      const tocWrapper = document.querySelector('.toc-container');
      if (tocWrapper) tocWrapper.style.display = 'none';
      return;
    }
    
    const tocList = document.createElement('ul');
    tocList.className = 'toc-list';
    
    const tocItems = [];
    
    headings.forEach((heading, index) => {
      // Generate ID if not exists
      if (!heading.id) {
        heading.id = 'heading-' + index + '-' + utils.slugify(heading.textContent);
      }
      
      const level = parseInt(heading.tagName.charAt(1));
      const li = document.createElement('li');
      li.className = 'toc-h' + level;
      
      const a = document.createElement('a');
      a.href = '#' + heading.id;
      a.textContent = heading.textContent;
      
      li.appendChild(a);
      tocList.appendChild(li);
      
      tocItems.push({
        element: heading,
        link: a
      });
    });
    
    tocContainer.appendChild(tocList);
    
    // Smooth scroll for TOC links
    tocList.addEventListener('click', function(e) {
      if (e.target.tagName === 'A') {
        e.preventDefault();
        const targetId = e.target.getAttribute('href').slice(1);
        const targetElement = document.getElementById(targetId);
        
        if (targetElement) {
          const headerHeight = document.getElementById('header').offsetHeight;
          const targetPosition = targetElement.getBoundingClientRect().top + window.pageYOffset - headerHeight - 20;
          
          window.scrollTo({
            top: targetPosition,
            behavior: 'smooth'
          });
          
          // Update URL without jumping
          history.pushState(null, null, '#' + targetId);
        }
      }
    });
    
    // Highlight active section
    function highlightActiveSection() {
      const scrollPosition = window.scrollY;
      const headerHeight = document.getElementById('header').offsetHeight;
      
      let activeItem = null;
      
      tocItems.forEach(item => {
        const rect = item.element.getBoundingClientRect();
        const top = rect.top + scrollPosition - headerHeight - 50;
        
        if (scrollPosition >= top) {
          activeItem = item;
        }
      });
      
      tocItems.forEach(item => {
        item.link.classList.remove('active');
      });
      
      if (activeItem) {
        activeItem.link.classList.add('active');
      }
    }
    
    window.addEventListener('scroll', utils.throttle(highlightActiveSection, 100));
    highlightActiveSection();
  }

  // Share Buttons
  function initShareButtons() {
    const postTitle = document.querySelector('.post-title');
    const postUrl = window.location.href;
    
    if (!postTitle) return;
    
    const shareContainer = document.createElement('div');
    shareContainer.className = 'share-buttons';
    shareContainer.innerHTML = `
      <a href="https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(postUrl)}" 
         class="share-button share-facebook" 
         target="_blank" 
         rel="noopener noreferrer"
         aria-label="Share on Facebook">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
          <path d="M24 12.073c0-6.627-5.373-12-12-12s-12 5.373-12 12c0 5.99 4.388 10.954 10.125 11.854v-8.385H7.078v-3.47h3.047V9.43c0-3.007 1.792-4.669 4.533-4.669 1.312 0 2.686.235 2.686.235v2.953H15.83c-1.491 0-1.956.925-1.956 1.874v2.25h3.328l-.532 3.47h-2.796v8.385C19.612 23.027 24 18.062 24 12.073z"/>
        </svg>
        Facebook
      </a>
      <a href="https://twitter.com/intent/tweet?text=${encodeURIComponent(postTitle.textContent)}&url=${encodeURIComponent(postUrl)}" 
         class="share-button share-twitter" 
         target="_blank" 
         rel="noopener noreferrer"
         aria-label="Share on Twitter">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
          <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
        </svg>
        Twitter
      </a>
      <a href="https://wa.me/?text=${encodeURIComponent(postTitle.textContent + ' ' + postUrl)}" 
         class="share-button share-whatsapp" 
         target="_blank" 
         rel="noopener noreferrer"
         aria-label="Share on WhatsApp">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
          <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893a11.821 11.821 0 00-3.48-8.413Z"/>
        </svg>
        WhatsApp
      </a>
      <a href="https://telegram.me/share/url?url=${encodeURIComponent(postUrl)}&text=${encodeURIComponent(postTitle.textContent)}" 
         class="share-button share-telegram" 
         target="_blank" 
         rel="noopener noreferrer"
         aria-label="Share on Telegram">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
          <path d="M11.944 0A12 12 0 0 0 0 12a12 12 0 0 0 12 12 12 12 0 0 0 12-12A12 12 0 0 0 12 0a12 12 0 0 0-.056 0zm4.962 7.224c.1-.002.321.023.465.14a.506.506 0 0 1 .171.325c.016.093.036.306.02.472-.18 1.898-.962 6.502-1.36 8.627-.168.9-.499 1.201-.82 1.23-.696.065-1.225-.46-1.9-.902-1.056-.693-1.653-1.124-2.678-1.8-1.185-.78-.417-1.21.258-1.91.177-.184 3.247-2.977 3.307-3.23.007-.032.014-.15-.056-.212s-.174-.041-.249-.024c-.106.024-1.793 1.14-5.061 3.345-.48.33-.913.49-1.302.48-.428-.008-1.252-.241-1.865-.44-.752-.245-1.349-.374-1.297-.789.027-.216.325-.437.893-.663 3.498-1.524 5.83-2.529 6.998-3.014 3.332-1.386 4.025-1.627 4.476-1.635z"/>
        </svg>
        Telegram
      </a>
    `;
    
    const postHeader = document.querySelector('.post-header');
    if (postHeader) {
      postHeader.appendChild(shareContainer);
    }
  }

  // Reading Progress Bar
  function initReadingProgress() {
    const progressBar = document.createElement('div');
    progressBar.className = 'reading-progress';
    progressBar.innerHTML = '<div class="reading-progress-bar"></div>';
    document.body.appendChild(progressBar);
    
    const bar = progressBar.querySelector('.reading-progress-bar');
    
    function updateProgress() {
      const article = document.querySelector('.post-body');
      if (!article) return;
      
      const articleTop = article.offsetTop;
      const articleHeight = article.offsetHeight;
      const windowHeight = window.innerHeight;
      const scrolled = window.scrollY;
      
      const progress = Math.max(0, Math.min(100, 
        ((scrolled - articleTop + windowHeight) / articleHeight) * 100
      ));
      
      bar.style.width = progress + '%';
    }
    
    window.addEventListener('scroll', utils.throttle(updateProgress, 10));
    updateProgress();
  }

  // Copy code button
  function initCodeCopy() {
    const codeBlocks = document.querySelectorAll('pre code');
    
    codeBlocks.forEach(block => {
      const pre = block.parentElement;
      const wrapper = document.createElement('div');
      wrapper.className = 'code-wrapper';
      pre.parentNode.insertBefore(wrapper, pre);
      wrapper.appendChild(pre);
      
      const button = document.createElement('button');
      button.className = 'copy-code-button';
      button.textContent = 'Copy';
      button.setAttribute('aria-label', 'Copy code');
      wrapper.appendChild(button);
      
      button.addEventListener('click', async function() {
        const code = block.textContent;
        
        try {
          await navigator.clipboard.writeText(code);
          button.textContent = 'Copied!';
          button.classList.add('copied');
          
          setTimeout(() => {
            button.textContent = 'Copy';
            button.classList.remove('copied');
          }, 2000);
        } catch (err) {
          // Fallback for older browsers
          const textarea = document.createElement('textarea');
          textarea.value = code;
          textarea.style.position = 'fixed';
          textarea.style.opacity = '0';
          document.body.appendChild(textarea);
          textarea.select();
          document.execCommand('copy');
          document.body.removeChild(textarea);
          
          button.textContent = 'Copied!';
          setTimeout(() => {
            button.textContent = 'Copy';
          }, 2000);
        }
      });
    });
  }

  // Enhanced image loading
  function initImageEnhancements() {
    const images = document.querySelectorAll('.post-body img');
    
    images.forEach(img => {
      // Add loading placeholder
      if (!img.complete) {
        img.classList.add('lazy-img');
        
        img.addEventListener('load', function() {
          this.classList.add('loaded');
        });
        
        img.addEventListener('error', function() {
          this.alt = 'Image failed to load';
          this.classList.add('error');
        });
      }
      
      // Add zoom functionality for larger images
      if (img.naturalWidth > 800) {
        img.style.cursor = 'zoom-in';
        
        img.addEventListener('click', function() {
          const overlay = document.createElement('div');
          overlay.className = 'image-overlay';
          overlay.innerHTML = `
            <div class="image-overlay-content">
              <img src="${this.src}" alt="${this.alt}">
              <button class="close-overlay" aria-label="Close image">×</button>
            </div>
          `;
          
          document.body.appendChild(overlay);
          document.body.style.overflow = 'hidden';
          
          overlay.addEventListener('click', function(e) {
            if (e.target === overlay || e.target.classList.contains('close-overlay')) {
              document.body.removeChild(overlay);
              document.body.style.overflow = '';
            }
          });
        });
      }
    });
  }

  // Search functionality
  function initSearch() {
    const searchBox = document.querySelector('.search-box');
    if (!searchBox) return;
    
    const input = searchBox.querySelector('input');
    const button = searchBox.querySelector('button');
    
    function performSearch() {
      const query = input.value.trim();
      if (query) {
        window.location.href = `/search?q=${encodeURIComponent(query)}`;
      }
    }
    
    button.addEventListener('click', performSearch);
    input.addEventListener('keypress', function(e) {
      if (e.key === 'Enter') {
        performSearch();
      }
    });
  }

  // Back to top button
  function initBackToTop() {
    const button = document.createElement('button');
    button.className = 'back-to-top';
    button.innerHTML = '↑';
    button.setAttribute('aria-label', 'Back to top');
    document.body.appendChild(button);
    
    function toggleButton() {
      if (window.scrollY > 300) {
        button.classList.add('show');
      } else {
        button.classList.remove('show');
      }
    }
    
    window.addEventListener('scroll', utils.throttle(toggleButton, 100));
    
    button.addEventListener('click', function() {
      window.scrollTo({
        top: 0,
        behavior: 'smooth'
      });
    });
  }

  // Initialize all features
  document.addEventListener('DOMContentLoaded', function() {
    // Only initialize on post pages
    if (document.querySelector('.post-view')) {
      generateTOC();
      initShareButtons();
      initReadingProgress();
      initCodeCopy();
      initImageEnhancements();
    }
    
    // Initialize on all pages
    initSearch();
    initBackToTop();
    
    // Add CSS for new features
    const style = document.createElement('style');
    style.textContent = `
      .reading-progress {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        height: 3px;
        background: rgba(0,0,0,0.1);
        z-index: 1001;
      }
      
      .reading-progress-bar {
        height: 100%;
        background: linear-gradient(90deg, var(--primary), var(--secondary));
        width: 0;
        transition: width 0.1s;
      }
      
      .code-wrapper {
        position: relative;
      }
      
      .copy-code-button {
        position: absolute;
        top: 8px;
        right: 8px;
        background: var(--primary);
        color: white;
        border: none;
        border-radius: 4px;
        padding: 4px 12px;
        font-size: 12px;
        cursor: pointer;
        opacity: 0;
        transition: opacity 0.3s;
      }
      
      .code-wrapper:hover .copy-code-button {
        opacity: 1;
      }
      
      .copy-code-button.copied {
        background: #28a745;
      }
      
      .image-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0,0,0,0.9);
        z-index: 9999;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: zoom-out;
        animation: fadeIn 0.3s;
      }
      
      .image-overlay-content {
        position: relative;
        max-width: 90%;
        max-height: 90%;
      }
      
      .image-overlay img {
        max-width: 100%;
        max-height: 90vh;
        object-fit: contain;
      }
      
      .close-overlay {
        position: absolute;
        top: -40px;
        right: 0;
        background: none;
        border: none;
        color: white;
        font-size: 40px;
        cursor: pointer;
        padding: 0;
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      
      .back-to-top {
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: var(--primary);
        color: white;
        border: none;
        border-radius: 50%;
        width: 50px;
        height: 50px;
        font-size: 24px;
        cursor: pointer;
        opacity: 0;
        visibility: hidden;
        transition: all 0.3s;
        box-shadow: 0 2px 10px rgba(0,0,0,0.2);
      }
      
      .back-to-top.show {
        opacity: 1;
        visibility: visible;
      }
      
      .back-to-top:hover {
        background: var(--secondary);
        transform: translateY(-3px);
        box-shadow: 0 5px 20px rgba(0,0,0,0.3);
      }
      
      .theme-transition * {
        transition: background-color 0.3s, color 0.3s, border-color 0.3s !important;
      }
    `;
    document.head.appendChild(style);
  });
})();
