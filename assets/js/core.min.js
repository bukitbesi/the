// Core JavaScript - Essential Functionality
(function() {
  'use strict';

  // Performance monitoring
  const perfData = {
    start: performance.now(),
    marks: {}
  };

  // Mark performance point
  function perfMark(name) {
    perfData.marks[name] = performance.now() - perfData.start;
  }

  // Initialize theme before paint
  function initTheme() {
    const savedTheme = localStorage.getItem('theme');
    const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
    const theme = savedTheme || (prefersDark ? 'dark' : 'light');
    document.documentElement.setAttribute('data-theme', theme);
    perfMark('theme-init');
  }

  // Run immediately to prevent flash
  initTheme();

  // DOM Ready handler
  function ready(fn) {
    if (document.readyState !== 'loading') {
      fn();
    } else {
      document.addEventListener('DOMContentLoaded', fn);
    }
  }

  ready(function() {
    perfMark('dom-ready');

    // Remove loading state
    document.body.classList.remove('loading');

    // Dark mode toggle
    const darkModeToggle = document.getElementById('darkModeToggle');
    if (darkModeToggle) {
      darkModeToggle.addEventListener('click', function() {
        const currentTheme = document.documentElement.getAttribute('data-theme');
        const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
        
        // Add transition class
        document.documentElement.classList.add('theme-transition');
        document.documentElement.setAttribute('data-theme', newTheme);
        localStorage.setItem('theme', newTheme);
        
        // Remove transition class after animation
        setTimeout(() => {
          document.documentElement.classList.remove('theme-transition');
        }, 300);
        
        // Send analytics event
        if (typeof gtag !== 'undefined') {
          gtag('event', 'theme_change', {
            'theme': newTheme
          });
        }
      });
    }

    // Mobile menu toggle
    const mobileMenuToggle = document.getElementById('mobileMenuToggle');
    const mainNav = document.getElementById('main-nav');
    
    if (mobileMenuToggle && mainNav) {
      mobileMenuToggle.addEventListener('click', function() {
        mainNav.classList.toggle('active');
        this.setAttribute('aria-expanded', mainNav.classList.contains('active'));
      });

      // Close menu on outside click
      document.addEventListener('click', function(e) {
        if (!mobileMenuToggle.contains(e.target) && !mainNav.contains(e.target)) {
          mainNav.classList.remove('active');
          mobileMenuToggle.setAttribute('aria-expanded', 'false');
        }
      });
    }

    // Smart header hide/show on scroll
    const header = document.getElementById('header');
    let lastScrollTop = 0;
    let ticking = false;

    function updateHeader() {
      const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
      
      if (scrollTop > lastScrollTop && scrollTop > 100) {
        // Scrolling down
        header.classList.add('hide');
      } else {
        // Scrolling up
        header.classList.remove('hide');
      }
      
      if (scrollTop > 50) {
        header.classList.add('shadow');
      } else {
        header.classList.remove('shadow');
      }
      
      lastScrollTop = scrollTop;
      ticking = false;
    }

    function requestTick() {
      if (!ticking) {
        window.requestAnimationFrame(updateHeader);
        ticking = true;
      }
    }

    window.addEventListener('scroll', requestTick, { passive: true });

    // Set current year
    const yearElements = document.querySelectorAll('#currentYear');
    yearElements.forEach(el => {
      el.textContent = new Date().getFullYear();
    });

    // Image lazy loading with native support
    if ('loading' in HTMLImageElement.prototype) {
      const images = document.querySelectorAll('img[loading="lazy"]');
      images.forEach(img => {
        if (img.dataset.src) {
          img.src = img.dataset.src;
        }
      });
    } else {
      // Fallback for older browsers
      const script = document.createElement('script');
      script.src = 'https://cdn.jsdelivr.net/npm/lazysizes@5/lazysizes.min.js';
      document.body.appendChild(script);
    }

    // Optimize external links
    const links = document.querySelectorAll('a[href^="http"]:not([href*="' + location.hostname + '"])');
    links.forEach(link => {
      link.setAttribute('target', '_blank');
      link.setAttribute('rel', 'noopener noreferrer');
    });

    // Archive widget toggle
    const archiveToggles = document.querySelectorAll('.BlogArchive .toggle');
    archiveToggles.forEach(toggle => {
      toggle.addEventListener('click', function(e) {
        e.preventDefault();
        const parent = this.closest('.archivedate');
        parent.classList.toggle('expanded');
        
        // Update icon
        const zippy = this.querySelector('.zippy');
        if (parent.classList.contains('expanded')) {
          zippy.innerHTML = '▼';
          zippy.classList.add('toggle-open');
        } else {
          zippy.innerHTML = '▶';
          zippy.classList.remove('toggle-open');
        }
      });
    });

    // Archive dropdown
    const archiveMenu = document.querySelector('[id$="_ArchiveMenu"]');
    if (archiveMenu) {
      archiveMenu.addEventListener('change', function(e) {
        if (e.target.value) {
          window.location.href = e.target.value;
        }
      });
    }

    // Focus management for accessibility
    const skipLink = document.querySelector('.skip-link');
    if (skipLink) {
      skipLink.addEventListener('click', function(e) {
        e.preventDefault();
        const target = document.querySelector(this.getAttribute('href'));
        if (target) {
          target.setAttribute('tabindex', '-1');
          target.focus();
        }
      });
    }

    // Performance: Log metrics
    perfMark('init-complete');
    
    // Log performance data in development
    if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
      console.log('Performance Metrics:', perfData.marks);
    }

    // Send Web Vitals to analytics
    if ('PerformanceObserver' in window) {
      try {
        // LCP
        const lcpObserver = new PerformanceObserver((list) => {
          const entries = list.getEntries();
          const lastEntry = entries[entries.length - 1];
          if (typeof gtag !== 'undefined') {
            gtag('event', 'web_vitals', {
              'metric_name': 'LCP',
              'metric_value': Math.round(lastEntry.startTime)
            });
          }
        });
        lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] });

        // FID
        const fidObserver = new PerformanceObserver((list) => {
          for (const entry of list.getEntries()) {
            if (typeof gtag !== 'undefined') {
              gtag('event', 'web_vitals', {
                'metric_name': 'FID',
                'metric_value': Math.round(entry.processingStart - entry.startTime)
              });
            }
          }
        });
        fidObserver.observe({ entryTypes: ['first-input'] });

        // CLS
        let clsValue = 0;
        let clsEntries = [];
        const clsObserver = new PerformanceObserver((list) => {
          for (const entry of list.getEntries()) {
            if (!entry.hadRecentInput) {
              clsEntries.push(entry);
              clsValue += entry.value;
            }
          }
        });
        clsObserver.observe({ entryTypes: ['layout-shift'] });

        // Report CLS when page is hidden
        document.addEventListener('visibilitychange', () => {
          if (document.hidden && typeof gtag !== 'undefined') {
            gtag('event', 'web_vitals', {
              'metric_name': 'CLS',
              'metric_value': Math.round(clsValue * 1000) / 1000
            });
          }
        });
      } catch (e) {
        // Silently fail for browsers that don't support these observers
      }
    }
  });

  // Prevent FOUC for theme
  document.documentElement.style.visibility = 'visible';
})();
